<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ngayXuatHDNLabel.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="tenNVNhapHangLabel.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="maNVLabel.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="maHDNLabel.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="label2.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnIn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sgAAAABJRU5ErkJggg==
</value>
  </data>
</root>